{"ast":null,"code":"var _jsxFileName = \"/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Github Repos\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : repos.map(repo => React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })))));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","map","repo","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,cAAZ;AAA4BG,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEP,CAACF,cAAc,CAACE,QAAD,CAAf,CAFO,CAAT;AAIA,SAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,EAGHC,KAAK,KAAG,IAAR,GAAe,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA4BA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACxC;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAD0B,CAHzB,CAAP;AAcD,CAnBD;;AAqBAL,aAAa,CAACM,SAAd,GAA0B;AACxBP,EAAAA,cAAc,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADP;AAExBN,EAAAA,KAAK,EAAEN,SAAS,CAACa,KAAV,CAAgBD,UAFC;AAGxBP,EAAAA,QAAQ,EAAEL,SAAS,CAACc,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,KAAK,EAAEU,KAAK,CAACC,OAAN,CAAcX;AADW,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBc,eADoB,EAEpB;AAAEZ,EAAAA;AAAF,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(()=>{\n    getGithubRepos(username)\n  },[getGithubRepos(username)])\n\n  return <div className=\"profile-github\">\n    <h2 className=\"text-primary my-1\">Github Repos</h2>\n    {\n      repos===null ? <Spinner/>: (repos.map(repo=>(\n        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n          <div>\n            <h4>\n              \n            </h4>\n          </div>\n        </div>\n      )))\n    }\n  </div>;\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}