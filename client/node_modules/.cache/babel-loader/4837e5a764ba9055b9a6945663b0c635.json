{"ast":null,"code":"import _objectSpread from \"/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POSTS, ADD_POSTS, GET_POST, ADD_COMMENT } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: payload,\n        loading: false\n      });\n\n    case ADD_POSTS:\n      return _objectSpread({}, state, {\n        posts: [payload, ...state.posts],\n        laoding: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === payload.id ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post),\n        loading: false\n      });\n\n    case DELETE_POSTS:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POSTS","ADD_POSTS","GET_POST","ADD_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","laoding","map","_id","id","likes","filter"],"mappings":";AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,WAPF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAAA,QAC5CC,IAD4C,GAC1BD,MAD0B,CAC5CC,IAD4C;AAAA,QACtCC,OADsC,GAC1BF,MAD0B,CACtCE,OADsC;;AAGpD,UAAQD,IAAR;AACE,SAAKd,SAAL;AACE,+BACKY,KADL;AAEEJ,QAAAA,KAAK,EAAEO,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,QAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,SAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFT;AAGEQ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKf,UAAL;AACE,+BACKW,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,YAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IACzBA,IAAI,CAACS,GAAL,KAAaH,OAAO,CAACI,EAArB,qBAA+BV,IAA/B;AAAqCW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAApD,aAA8DX,IADzD,CAFT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKP,YAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYa,MAAZ,CAAmBZ,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaH,OAAxC,CAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOE,KAAP;AAxCJ;AA0CD","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POSTS,\n  ADD_POSTS,\n  GET_POST,\n  ADD_COMMENT,\n  \n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      }\n    case ADD_POSTS:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        laoding: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case DELETE_POSTS:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}