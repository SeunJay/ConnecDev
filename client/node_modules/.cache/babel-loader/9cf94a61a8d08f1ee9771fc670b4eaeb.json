{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperince = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Expereince Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","addExperince","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n};\n\n// Add Experience\nexport const addExperince = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Expereince Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if(errors){\n      errors.forEach(error => dispatch(setAlert(error.msg, )))\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}