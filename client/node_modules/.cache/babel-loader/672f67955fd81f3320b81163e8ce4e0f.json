{"ast":null,"code":"var _jsxFileName = \"/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"Welcome \", user && user.name), profile !== nu);\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateTpProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateTpProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/seunjay/Desktop/Decagon/MERN STACK/devkonnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","user","profile","loading","name","nu","propTypes","func","isRequired","object","mapStateTpProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBF,EAAAA,iBADiB;AAEjBG,EAAAA,IAAI,EAAE;AAACC,IAAAA;AAAD,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOM,OAAO,IAAID,OAAO,KAAK,IAAvB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,cAA4DD,IAAI,IAAIA,IAAI,CAACG,IAAzE,CAFF,EAGGF,OAAO,KAAIG,EAHd,CAHF;AASD,CAjBD;;AAmBAN,SAAS,CAACO,SAAV,GAAsB;AACpBT,EAAAA,iBAAiB,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADd;AAEpBR,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBD,UAFH;AAGpBN,EAAAA,OAAO,EAAEP,SAAS,CAACc,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADoB;AAEhCE,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFiB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CACpBc,eADoB,EAEpB;AAAEb,EAAAA;AAAF,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {user},\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\"><i className=\"fas fa-user\"></i>Welcome {user && user.name}</p>\n      {profile !==nu}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateTpProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateTpProps,\n  { getCurrentProfile }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}